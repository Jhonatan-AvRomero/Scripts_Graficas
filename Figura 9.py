# -*- coding: utf-8 -*-
"""Convolución.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jdPyE04Wr59Fps9ym8y1kRkxluK9P9Bj

***IMPORTAR LIBRERÍAS***
"""

!pip install bruges

import numpy as np
import matplotlib.pyplot as plt
import bruges

"""***CREAR PERFIL LITOLÓGICO***"""

size_tr = 100
nx_tr, ny_tr = ([size_tr]*2)
nxy_tr = nx_tr * ny_tr
x = np.linspace(0, nx_tr-1, nx_tr)
y = np.linspace(0, ny_tr-1, ny_tr)
xy = np.reshape(np.array([np.meshgrid(x, y, indexing='ij')]),[2,nxy_tr]).T

"""***ASIGNAR VALORES (DT & RHOB)***"""

rhob = np.zeros(ny_tr)
i = 0
for p in np.arange(0,100,1):
    if i<20:
        rhob[i] = 2.79 * 1000
    elif i<50:
        rhob[i] = 2.33 * 1000
    elif i <70:
        rhob[i] = 2.66 * 1000
    elif i < 75:
        rhob[i] = 2.61 * 1000
    else:
        rhob[i] = 2.57 * 1000
    i = i + 1
#
dt = np.zeros(ny_tr)
i = 0
for p in np.arange(0,100,1):
    if i<20:
        dt[i] = 47.25 / 0.3048
    elif i<50:
        dt[i] = 63.66 / 0.3048
    elif i < 70:
        dt[i] = 51.06 / 0.3048
    elif i < 75:
        dt[i] = 53.7 / 0.3048
    else:
        dt[i] = 57.43 / 0.3048
    i = i + 1

"""***OBTENER COEFICIENTES DE REFLEXIÓN***"""

Vsonic = 1e6/dt
AI = Vsonic * rhob
##########
Imp = AI
Rc=[]
for i in range(len(Imp)-1):
    Rc.append((Imp[i+1]-Imp[i])/(Imp[i]+Imp[i+1]))
# to adjust vector size copy the last element to the tail
Rc.append(Rc[-1])
refl = np.tile(Rc,[nx_tr,1])
plt.imshow(np.reshape(refl,[size_tr]*2).T,cmap=plt.cm.gray_r)

"""***DEFINIR ONDÍCULA RICKER***

"""

def convolve_wavelet(refl, fr):
    refl = np.reshape(refl,[nx_tr,ny_tr])
    traces = np.zeros([nx_tr, ny_tr])
    wl = bruges.filters.wavelets.ricker(t_lng, dt, fr)
    for i in range(nx_tr):
      traces[i,:] = np.convolve(refl[i,:], wl, mode='same')
    return traces

"""***GRÁFICA FINAL***"""

dt = 0.004 # Sampling interval (ms)
t_lng = 0.082 # Length of Ricker wavelet in ms

fig, ax = plt.subplots(2, 2, sharey=False, figsize = (10,10),
                       gridspec_kw={'width_ratios': [1,1]})
fig.subplots_adjust(wspace=0.2, hspace=0.1)
ax[0,0].imshow(np.reshape(refl,[size_tr]*2).T,cmap=plt.cm.gray_r)
ax[0,0].set_xticklabels('')
ax[0,0].set_xticks([])
ax[0,0].set_ylabel('Profundidad', fontsize=12, fontweight='bold')
ax[0,0].text(2.2, 6.2, 'a)', fontsize = 12, style='italic', 
             fontweight = 'bold',
             bbox={'facecolor': 'white', 'alpha': 1, 'pad': 7})
#
traces1 = convolve_wavelet(refl, 5)
ax[0,1].imshow(np.reshape(traces1,[size_tr]*2).T,cmap=plt.cm.gray_r)
ax[0,1].set_xticklabels('')
ax[0,1].set_xticks([])
ax[0,1].set_ylabel('Profundidad', fontsize=12, fontweight='bold')
ax[0,1].text(2.2, 6.2, 'b)', fontsize = 12, style='italic', 
             fontweight = 'bold',
             bbox={'facecolor': 'white', 'alpha': 1, 'pad': 7})
#
traces2 = convolve_wavelet(refl, 15)
ax[1,0].imshow(np.reshape(traces2,[size_tr]*2).T,cmap=plt.cm.gray_r)
ax[1,0].set_xticklabels('')
ax[1,0].set_xticks([])
ax[1,0].set_ylabel('Profundidad', fontsize=12, fontweight='bold')
ax[1,0].text(2.2, 6.2, 'c)', fontsize = 12, style='italic', 
             fontweight = 'bold',
             bbox={'facecolor': 'white', 'alpha': 1, 'pad': 7})
#
traces3 = convolve_wavelet(refl, 40)
ax[1,1].imshow(np.reshape(traces3,[size_tr]*2).T,cmap=plt.cm.gray_r)
ax[1,1].set_xticklabels('')
ax[1,1].set_xticks([])
ax[1,1].set_ylabel('Profundidad', fontsize=12, fontweight='bold')
ax[1,1].text(2.2, 6.2, 'd)', fontsize = 12, style='italic', 
             fontweight = 'bold',
             bbox={'facecolor': 'white', 'alpha': 1, 'pad': 7})